generator client {
  provider = "prisma-client-js"
  output   = "../dist"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum AuthProvider {
  GOOGLE
}

enum TranslationsImportAttemptStatus {
  IN_PROGRESS
  SUCCESS
  FAILED
}

enum TranslationsImportAttemptType {
  FILE_JSON
}

model Account {
  id             Int          @id @default(autoincrement())
  createdAt      DateTime     @default(now())
  updatedAt      DateTime     @updatedAt
  authProvider   AuthProvider
  authProviderId String
  firstName      String?
  lastName       String?
  name           String?
  email          String?
  photo          String?
  members        Member[]

  @@unique([authProvider, authProviderId])
}

model Member {
  id                        Int                         @id @default(autoincrement())
  createdAt                 DateTime                    @default(now())
  updatedAt                 DateTime                    @updatedAt
  accountId                 Int
  account                   Account                     @relation(fields: [accountId], references: [id])
  workspaceId               Int
  workspace                 Workspace                   @relation(fields: [workspaceId], references: [id])
  TranslationsImportAttempt TranslationsImportAttempt[]

  @@unique([accountId, workspaceId])
}

model TranslationsImportAttempt {
  id          Int                             @id @default(autoincrement())
  createdAt   DateTime                        @default(now())
  updatedAt   DateTime                        @updatedAt
  workspaceId Int
  workspace   Workspace                       @relation(fields: [workspaceId], references: [id])
  status      TranslationsImportAttemptStatus
  progress    Float                           @default(0)
  completedAt DateTime?
  issuerId    Int?
  issuer      Member?                         @relation(fields: [issuerId], references: [id], onDelete: SetNull)
  type        TranslationsImportAttemptType
  details     Json                            @default("{}")
}

model Workspace {
  id                        Int                         @id @default(autoincrement())
  createdAt                 DateTime                    @default(now())
  updatedAt                 DateTime                    @updatedAt
  slug                      String                      @unique
  languages                 String[]
  profile                   WorkspaceProfile?
  members                   Member[]
  TranslationsImportAttempt TranslationsImportAttempt[]
}

model WorkspaceProfile {
  id          Int       @id @default(autoincrement())
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  displayName String
  photo       String?
  workspaceId Int       @unique
  workspace   Workspace @relation(fields: [workspaceId], references: [id])
}
